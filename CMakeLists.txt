cmake_minimum_required(VERSION 3.14...3.17 FATAL_ERROR)
project(MillepedeII VERSION 4.6.0 LANGUAGES C CXX Fortran)
option(BUILD_PEDE "Build pede executable" ON)
option(BUILD_MILLE "Build libmillepedeii-mille library " ON)
include(CTest)
include(GNUInstallDirs)
if(NOT CMAKE_BUILD_TYPE)
  set(CMAKE_BUILD_TYPE Release)
endif()
set(CMAKE_INSTALL_RPATH_USE_LINK_PATH TRUE)
if(CMAKE_SYSTEM_NAME STREQUAL "Linux")
  set(CMAKE_EXE_LINKER_FLAGS ${CMAKE_EXE_LINKER_FLAGS} "-Wl,--enable-new-dtags")
  set(CMAKE_SHARED_LINKER_FLAGS ${CMAKE_SHARED_LINKER_FLAGS} "-Wl,--enable-new-dtags")
endif()
if(BUILD_PEDE)
  set(sources cfortran.h Dbandmatrix.f90 linesrch.f90 mille.f90 minresDataModule.f90 minresModule.f90 minresqlpBlasModule.f90 minresqlpDataModule.f90 minresqlpModule.f90 mpbits.f90 mpdalc.f90 mpdef.f90 mphistab.f90 mpmod.f90 mpnum.f90 mpqldec.f90 mptest1.f90 mptest2.f90 mptext.f90 pede.f90 randoms.f90 readc.c vertpr.f90)
  set(build_dir "${CMAKE_BINARY_DIR}/pede")
  file(MAKE_DIRECTORY ${build_dir})
  foreach(src IN LISTS sources)
    configure_file(${src} ${build_dir} COPYONLY)
  endforeach()
  configure_file(Makefile ${build_dir} COPYONLY)
  add_custom_target(pede ALL make pede USES_TERMINAL VERBATIM WORKING_DIRECTORY ${build_dir})
  add_test(NAME pede COMMAND pede -t WORKING_DIRECTORY ${build_dir})
  install(PROGRAMS ${build_dir}/pede DESTINATION ${CMAKE_INSTALL_BINDIR})
endif()
if(BUILD_MILLE)
  add_library(Mille Mille.cc)
  target_include_directories(Mille PUBLIC $<BUILD_INTERFACE:${CMAKE_SOURCE_DIR/src}> $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>)
  set_target_properties(Mille PROPERTIES VERSION "${PROJECT_VERSION}" SOVERSION "${PROJECT_VERSION_MAJOR}.${PROJECT_VERSION_MINOR}" OUTPUT_NAME millepedeii-mille)
  install(TARGETS Mille DESTINATION ${CMAKE_INSTALL_LIBDIR})
  install(FILES Mille.h DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/millepedeii)
endif()
if(BUILD_PEDE OR BUILD_MILLE)
endif()
